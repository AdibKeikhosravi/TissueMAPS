# TmDeploy - Automated setup and deployment of TissueMAPS in the cloud.
# Copyright (C) 2016-2018  University of Zurich

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
---

- name: uWSGI listens on network port
  set_fact:
    uwsgi_socket: "{{ app_host }}:{{ app_port }}"
  when: app_host != 'unix'
  tags:
    - app-server
    - uwsgi

- block:
    # When app_host is "unix", app_port is the path to the socket file.
    - name: uWSGI listens on UNIX-domain socket
      set_fact:
        uwsgi_socket: "{{ app_port }}"
    - name: Create directory for UNIX socket
      file:
        path: "{{ app_port | dirname }}"
        state: directory
        recurse: yes
        owner: "{{ tm_user }}"
        group: "{{ tm_group }}"
        mode: 0700
    - name: Set ACL to let NginX access UNIX socket
      acl:
        path: "{{ app_port | dirname }}"
        entity: "{{ web_user }}"
        etype: user
        permissions: rx
        state: present
        default: yes
        recursive: yes
  when: app_host == 'unix'
  tags:
    - app-server
    - uwsgi

- name: Create uWSGI log and metric directories
  file:
    path: '{{ item }}'
    state: directory
    recurse: yes
    owner: "{{ tm_user }}"
    group: "{{ tm_group }}"
    mode: 0770
  with_items:
    - /var/log/uwsgi
    - /var/log/uwsgi/metrics
    - /var/run/uwsgi
  tags:
    - app-server
    - uwsgi

- name: Deploy uWSGI configuration and startup script
  template:
    src: '{{ item.name }}.j2'
    dest: '/home/{{ tm_user }}/.tmaps/{{ item.name }}'
    owner: "{{ tm_user }}"
    group: "{{ tm_group }}"
    mode: '{{ item.mode }}'
  with_items:
    # Note: modes must be string, otherwise YAML will read them as
    # decimal constants but Ansible will then complain that "modes
    # must be symbolic or octal numbers"
    - { name: uwsgi.ini, mode: 'ug+r,o-rwx' }
    - { name: uwsgi.sh,  mode: 'ug+rx,o-rwx' }
  tags:
    - app-server
    - uwsgi

- name: Create directory for uWSGI pid file
  file:
    path: /var/run/uwsgi
    state: directory
    recurse: yes
    owner: "{{ tm_user }}"
    group: "{{ tm_group }}"
    mode: 0770
  when: ansible_env.ANSIBLE_CONTAINER is defined
  tags:
    - app-server
    - uwsgi

- name: Place tmpfiles.d config file for uWSGI
  copy:
    content: |
      d /var/run/uwsgi 0750 {{ tm_user }} {{ web_group }} -
      a+ /var/run/uwsgi - - - - u:{{ web_group }}:rx
      a+ /var/run/uwsgi - - - - default:u:{{ web_group }}:rw
    dest: /etc/tmpfiles.d/uwsgi.conf
    owner: root
    group: root
    mode: 0700
  when: ansible_env.ANSIBLE_CONTAINER is undefined
  tags:
    - app-server
    - uwsgi

- name: Deploy system-level uWSGI config files
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: root
    group: root
  with_items:
    - { src: uwsgi.service.j2,   dest: /etc/systemd/system/uwsgi.service }
    - { src: uwsgi.logrotate.j2, dest: /etc/logrotate.d/tissuemaps.conf }
  when:
    - ansible_env.ANSIBLE_CONTAINER is undefined
  tags:
    - app-server
    - uwsgi
