#!/usr/bin/env python
# encoding: utf-8
import os
import sys
import tmt
import traceback
from tmt.corilla.api import Corilla


if __name__ == '__main__':
    import argparse

    print tmt.corilla.logo % {'version': tmt.corilla.__version__}

    parser = argparse.ArgumentParser(
                    description='''
                    Calculate online statistics (mean and standard deviation)
                    at each pixel position over a large set of images.
                    '''
    )

    parser.add_argument('project_dir', nargs='?', default=os.getcwd(),
                        help='absolute path to project directory')

    parser.add_argument('--channel', dest='channel', type=int,
                        help='calculate statistics only for a single channel')

    parser.add_argument('-c', '--config', dest='config',
                        help='path to custom yaml configuration file \
                              (defaults to "dafu" configuration)')

    args = parser.parse_args()

    if not os.path.exists(args.project_dir):
        raise IOError('Project directory does not exist: "%s"'
                      % args.project_dir)

    if args.config:
        # Overwrite default "tmt" configuration
        print '. Using configuration file "%s"' % args.config
        args.config = tmt.util.load_config(args.config)
        print '. Checking configuration file'
        tmt.util.check_config(args.config)
    else:
        args.config = tmt.config

    try:
        Corilla.process_cli_commands(args)
        print 'üç∫  Done!'
    except Exception as error:
        sys.stdout.write('Failed. ')
        print 'Error message: "%s"\n' % str(error)
        for tb in traceback.format_tb(sys.exc_info()[2]):
            print tb
