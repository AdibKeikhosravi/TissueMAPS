#!/usr/bin/env python
'''Command line tool for uploading files to TissueMAPS.'''
import os
import logging
import argparse

from tmclient import TmClient
from tmclient.log import configure_logging
from tmclient.log import map_logging_verbosity

logger = logging.getLogger(__name__)


if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        description='Upload microscope files to TissueMAPS.'
    )
    parser.add_argument(
        '-H', '--host', required=True,
        help='name of TissueMAPS host'
    )
    parser.add_argument(
        '-P', '--port', type=int, default=80,
        help='number of the port to which the TissueMAPS server listens'
    )
    parser.add_argument(
        '-u', '--user_name', required=True,
        help='name of TissueMAPS user'
    )
    parser.add_argument(
        '-p', '--password',
        help='password of TissueMAPS user'
    )
    parser.add_argument(
        '-v', '--verbosity', action='count', default=0,
        help='increase logging verbosity (no logging by default)'
    )
    parser.add_argument(
        '-e', '--experiment_name', required=True,
        help='name of the parent experiment'
    )
    parser.add_argument(
        '-d', '--directory', required=True,
        help='path to directory where files should be uploaded from'
    )

    subparsers = parser.add_subparsers(dest='file_type', help='file type')
    subparsers.required = True

    microscope_file_parser = subparsers.add_parser(
        'microscope_file', help='upload microscope image (and metadat) files'
    )
    microscope_file_parser.set_defaults(method='upload_microscope_files')
    microscope_file_parser.add_argument(
        '-p', '--plate_name', required=True,
        help='name of the plate'
    )
    microscope_file_parser.add_argument(
        '-a', '--acquisition_name', required=True,
        help='name of the acquisition'
    )

    args = parser.parse_args()

    configure_logging()
    logging_level = map_logging_verbosity(args.verbosity)
    logging.getLogger('tmclient').setLevel(logging_level)
    logger.setLevel(logging_level)

    service = TmClient(
        args.host, args.port, args.experiment_name,
        args.user_name, args.password
    )

    service(args)
