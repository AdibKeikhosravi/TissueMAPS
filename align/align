#!/usr/bin/env python
import yaml
import h5py
from os.path import basename
import argparse
from align import registration as reg


if __name__ == '__main__':

    parser = argparse.ArgumentParser('Calculate shift between images \
                                     of different acquisition cycles.')

    parser.add_argument('joblist_file',
                        help='path to file with list of images to align')

    args = parser.parse_args()

    # Get information from 'joblist' file
    joblist = yaml.load(open(args.joblist_file).read())
    reg_files = joblist['registration']
    ref_files = joblist['reference']
    out_file = joblist['output']

    # Loop over cycles
    output = dict()
    for cycle, files in reg_files.iteritems():
        output[cycle] = dict()
        output[cycle]['x_shift'] = []
        output[cycle]['y_shift'] = []
        output[cycle]['reg_file'] = []
        for site in xrange(len(files)):
            # Get filenames of images that should be aligned between cycles
            im_filename = files[site]
            ref_im_filename = ref_files[site]

            # Calculate shift between images of different cycles
            [x, y] = reg.calculate_shift(im_filename, ref_im_filename)

            # Store calculated shift and name of registered image
            output[cycle]['x_shift'].append(x)
            output[cycle]['y_shift'].append(y)
            output[cycle]['reg_file'].append(basename(im_filename))

    # Write output to hdf5 file
    f = h5py.File(out_file, 'r+')  # file has to exist already!
    for cycle, data in output.iteritems():
        for feature, values in data.iteritems():
            # The calculated features will be stored in separate datasets,
            # each in a group per cycle
            hdf5_location = '%s/%s' % (cycle, feature)
            f.create_dataset(hdf5_location, data=values)
    f.close()
