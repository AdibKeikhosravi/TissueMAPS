#!/usr/bin/env python
import argparse
import sqlalchemy.orm.exc

import tmlib.models as tm


def add_plate(plate_name, experiment_name):
    with tm.utils.MainSession() as session:
        try:
            experiment = session.query(tm.Experiment).\
                filter_by(name=experiment_name).one()
            experiment_id = experiment.id
            plates_location = experiment.plates_location
        except sqlalchemy.orm.exc.NoResultFound:
            raise ValueError(
                'Experiment "%s" does not exist!' % experiment_name
            )
        except:
            raise

    with tm.utils.ExperimentSession(experiment_id=experiment_id) as session:
        plate = session.get_or_create(
            tm.Plate, name=plate_name, root_directory=plates_location
        )
        return plate.id


if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        description='''
            Add a new plate to an existing experiment
            in the TissueMAPS database.
        '''
    )
    parser.add_argument(
        '-e', '--experiment_name', required=True, type=str,
        help='name of the parent experiment'
    )
    parser.add_argument(
        '-p', '--plate_name', required=True, type=str,
        help='name of the new plate'
    )

    args = parser.parse_args()

    plate_id = add_plate(args.plate_name, args.experiment_name)

    print 'PLATE ID: %d' % plate_id
