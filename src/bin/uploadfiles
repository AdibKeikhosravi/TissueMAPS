#!/usr/bin/env python
'''
HTTP client to upload acquisition files.

pip install requests

'''
import os
import re
import yaml
import shutil
import logging
import argparse
import urllib
import requests

logger = logging.getLogger(__name__)

BASE_URL = 'http://babun.tissuemaps.org/'
DEFAULT_PARAMS = {
    'experiment_id': 'dG1hcHM1OQ==',
}
STATUS_URL = '/api/experiments/{{}}/workflow/status'

USER_CREDENTIALS = {
    'username': 'test',
    'password': 'pass',
}


class TmapsHttpClient(object):

    def __init__(self, base_url, params={}):
        self.session = requests.Session()
        assert base_url.startswith('http') \
            and base_url.endswith('/')
        self.base_url = base_url
        self.session.get(base_url)
        self.load_credetials()
        self.params = DEFAULT_PARAMS.copy()
        self.params.update(params)

    def load_credetials(self):
        user_credentials = USER_CREDENTIALS
        cred_filepath = os.path.expanduser('~/.tmaps_uploader.yaml')
        if os.path.exists(cred_filepath):
            with open(cred_filepath) as cred_file:
                user_credentials = yaml.load(cred_file.read())
        self.username = user_credentials['username']
        self.password = user_credentials['password']

    def get_url(self, uri, params=None):
        url = self.base_url + uri
        if params is None:
            return url
        return '%s?%s' % (url, urllib.urlencode(params))

    def login(self):
        logger.debug('Login in as: "%s, xxxxxxx"' % self.username)
        url = self.get_url('/auth')
        payload = {
            'username': self.username,
            'password': self.password,
        }
        res = self.session.post(url, json=payload)
        assert res.status_code == 200
        self._access_token = res.json()['access_token']

    def get_status():
        return


if __name__ == '__main__':
    # parser = argparse.ArgumentParser(
        # description='Utility to upload files from the microscope into '
                    # 'the website via HTTP.')
    # parser.add_argument(
    #     'yaml', help=('The path to the YAML file that holds the '
    #                   'encoded records'))
    # args = parser.parse_args()
    client = TmapsHttpClient(BASE_URL)
    client.login()
    client.get_status()
    # client.upload(filename)
